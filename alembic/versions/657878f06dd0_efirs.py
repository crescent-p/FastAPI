"""efirs

Revision ID: 657878f06dd0
Revises: 
Create Date: 2024-11-05 22:18:07.710822

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '657878f06dd0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request',
    sa.Column('book_name', sa.String(), nullable=False),
    sa.Column('ISBN', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('ISBN')
    )
    op.create_table('students',
    sa.Column('id_no', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('date_of_issue', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('date_of_expiry', sa.TIMESTAMP(timezone=True), server_default=sa.text("now() + interval '1 year'"), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id_no')
    )
    op.create_table('books',
    sa.Column('book_name', sa.String(), nullable=False),
    sa.Column('book_code', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('date_of_arrival', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('rack_no', sa.Integer(), nullable=True),
    sa.Column('no_of_books', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('book_code')
    )
    op.create_table('issue',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('issue_date', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('due_date', sa.TIMESTAMP(timezone=True), server_default=sa.text("now() + interval '3 months'"), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books.book_code'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id_no'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('student_id', 'book_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('issue')
    op.drop_table('books')
    op.drop_table('students')
    op.drop_table('request')
    op.drop_table('author')
    op.drop_table('admin')
    # ### end Alembic commands ###
